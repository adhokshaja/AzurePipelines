name: $(Major).$(Minor).$(rev:r)  # build numbering format

variables:
  - group:  'ArtifactDescription Extension'
    # this group includes the following variablea  
    #  ExtensionRoot
    #  PublisherID
    #  ExtensionID

trigger: none # will disable CI build

pr: # will trigger on PR
  branches:
    include: [ master ] # branch names which will trigger a build
  paths:
    include: [ $(ExtensionRoot) ] # file paths which must match to trigger a build

stages:
  - stage: Build
    jobs:
    - job: Build
      pool: 
        vmImage: 'windows-2019'
        demands: npm
      steps:
      # version all the task in the extension
      - task: qetza.replacetokens.replacetokens-task.replacetokens@3
        displayName: 'Setting the version for tasks in extension'
        inputs:
          rootDirectory: '$(ExtensionRoot)'
          targetFiles: '**\\task.json'
      
      # for each Node based task we must transpile it
      - template: build-node-task.yml
        parameters:
          extensionRoot: '$(ExtensionRoot)'
          taskName: 'ArtifactDescriptionTask'

      - task: TfxInstaller@1
        displayName: 'Install Tfx Tool'
        inputs:
          version: 'v0.6.x'

      - task: ms-devlabs.vsts-developer-tools-build-tasks.package-extension-build-task.PackageVSTSExtension@1
        displayName: 'Package and Publish VSTS Extension: PROD Package '
        inputs:
          rootFolder: '$(ExtensionRoot)'
          outputPath: '$(Build.ArtifactStagingDirectory)\\vsix'
          publisherId: '$(PublisherID)'
          extensionId: '$(ExtensionID)'
          extensionVersion: '$(Build.BuildNumber)'
          updateTasksVersion: true
          extensionVisibility: public

      - task: CopyFiles@2
        displayName: 'Copy Docs'
        inputs:
          SourceFolder: Extensions/ArtifactDescription
          Contents: |
            readme.md
            vss-extension.json
            ArtifactDescription\task\task.json
          TargetFolder: '$(Build.ArtifactStagingDirectory)\\vsix'

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'vsix'
          targetPath: '$(Build.ArtifactStagingDirectory)\\vsix'

  - stage: Private
    jobs:
    - deployment: Private_Deployment
      timeoutInMinutes: 0
      environment: 'Azure DevOps Marketplace (Private)'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadPipelineArtifact@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'vsix'
                downloadPath: $(System.DefaultWorkingDirectory)

            - task: TfxInstaller@1
              inputs:
                version: 'v0.6.x'

            - task: ms-devlabs.vsts-developer-tools-build-tasks.publish-extension-build-task.PublishExtension@1
              displayName: 'Publish Extension'
              inputs:
                connectedServiceName: 'Azure DevOps Marketplace (Work MSA)'
                fileType: vsix
                vsixFile: '$(System.DefaultWorkingDirectory)\\richardfennellBM.BM-VSTS-ArtifactDescription-Tasks-$(Build.BuildNumber).vsix'
                extensionTag: '-DEV'
                updateTasksVersion: false
                extensionVisibility: private

  - stage: Test
    jobs:
    - deployment: Private_Test
      timeoutInMinutes: 0
      variables:
      - group: 'VSTS Extension Gate'  
      environment: 'Azure DevOps Marketplace (Test)'
      strategy:
        runOnce:
          deploy:
            steps:
            - bash: ""
            